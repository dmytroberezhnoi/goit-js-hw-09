{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAASJ,SAASC,cAAc,mBAChCI,EAAYL,SAASC,cAAc,UAEzC,IAAIK,EACAC,EA8CJ,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAAKC,KACnBL,EAEFI,EAAI,CAAEE,SAAAR,EAAUS,MAAAR,IAGhBM,EAAI,CAAEC,SAAAR,EAAUS,MAAAR,GAAQ,IAGzBS,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBE,EAAAvB,GAASwB,OAAOC,QAAQ,uBAAqBL,QAAiBC,MAAU,IAEzEK,OAAM,EAACN,SAAEA,EAAQC,MAAEA,MAClBE,EAAAvB,GAASwB,OAAOG,QAAQ,sBAAoBP,QAAeC,MAAU,G,CA3D3EnB,EAAK0B,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAEJrB,EAAU,EACVC,EAAc,EAEd,IAAIW,EAAQU,OAAO1B,EAAW2B,OAC9B,MAAMC,EAAOF,OAAOzB,EAAU0B,OACxBE,EAAgBH,OAAOxB,EAAOyB,OAKpC,GAAIC,EAAO,GAAKZ,EAAQ,GAAKa,GAAiB,EAE5C,YADAX,EAAAvB,GAASwB,OAAOG,QAAQ,sBAGxBnB,EAAU2B,UAAW,EAGvBC,YAAW,KAKT,GAJA3B,GAAW,EACXC,GAAeW,EAEfV,EAAcF,EAASY,GACnBZ,IAAYyB,EACd,OAGF,MAAMG,EAAaC,aAAY,KAC7B7B,GAAW,EACXC,GAAeuB,EAEXxB,IAAYyB,IACd1B,EAAU2B,UAAW,EACrBI,cAAcF,IAEhB1B,EAAcF,EAASC,EAAY,GAClCuB,EAAK,GACPZ,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst createBtn = document.querySelector('button');\n\nlet counter;\nlet delayedTime;\n\nform.addEventListener('submit', onCreate);\n\nfunction onCreate(evt) {\n  evt.preventDefault();\n\n  counter = 0;\n  delayedTime = 0;\n\n  let delay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n  const promiseAmount = Number(amount.value);\n\n  // if (!promiseAmount) {\n  //   return;\n  // }\n  if (step < 0 || delay < 0 || promiseAmount <= 0) {\n    Notiflix.Notify.failure(`Enter correct data`);\n    return;\n  } else {\n    createBtn.disabled = true;\n  }\n\n  setTimeout(() => {\n    counter += 1;\n    delayedTime += delay;\n\n    createPromise(counter, delay);\n    if (counter === promiseAmount) {\n      return;\n    }\n\n    const IntervalId = setInterval(() => {\n      counter += 1;\n      delayedTime += step;\n\n      if (counter === promiseAmount) {\n        createBtn.disabled = false;\n        clearInterval(IntervalId);\n      }\n      createPromise(counter, delayedTime);\n    }, step);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    if (shouldResolve) {\n      // Fulfill\n      res({ position, delay });\n    } else {\n      // Reject\n      rej({ position, delay });\n    }\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$createBtn","$47d4ff9957288465$var$counter","$47d4ff9957288465$var$delayedTime","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","res","rej","position","delay","then","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","evt","preventDefault","Number","value","step","promiseAmount","disabled","setTimeout","IntervalId","setInterval","clearInterval"],"version":3,"file":"03-promises.0e29d9a3.js.map"}