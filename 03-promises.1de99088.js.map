{"mappings":"iiBAAA,IAQIA,EACAC,EATJC,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAASJ,SAASC,cAAc,mBAChCI,EAAYL,SAASC,cAAc,UA6CzC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACnBL,EAEFI,EAAI,CAAEE,SAAAR,EAAUS,MAAAR,IAGhBM,EAAI,CAAEC,SAAAR,EAAUS,MAAAR,G,IAGjBS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAAtB,GAASuB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAAtB,GAASuB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAvDzEjB,EAAK0B,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAIC,iBAEJhC,EAAU,EACVC,EAAc,EAEd,IAAIoB,EAAQY,OAAO1B,EAAW2B,OACxBC,EAAOF,OAAOzB,EAAU0B,OACxBE,EAAgBH,OAAOxB,EAAOyB,OAEpC,IAAKE,EACH,OAEA1B,EAAU2B,UAAW,EAGvBC,YAAW,WAKT,GAHArC,GAAeoB,EAEfV,EAHAX,GAAW,EAGYqB,GACnBrB,IAAYoC,EAIhB,IAAMG,EAAaC,aAAY,WAE7BvC,GAAekC,GADfnC,GAAW,KAGKoC,IACd1B,EAAU2B,UAAW,EACrBI,cAAcF,IAEhB5B,EAAcX,EAASC,E,GACtBkC,E,GACFd,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst createBtn = document.querySelector('button');\n\nlet counter;\nlet delayedTime;\n\nform.addEventListener('submit', onCreate);\n\nfunction onCreate(evt) {\n  evt.preventDefault();\n\n  counter = 0;\n  delayedTime = 0;\n\n  let delay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n  const promiseAmount = Number(amount.value);\n\n  if (!promiseAmount) {\n    return;\n  } else {\n    createBtn.disabled = true;\n  }\n\n  setTimeout(() => {\n    counter += 1;\n    delayedTime += delay;\n\n    createPromise(counter, delay);\n    if (counter === promiseAmount) {\n      return;\n    }\n\n    const IntervalId = setInterval(() => {\n      counter += 1;\n      delayedTime += step;\n\n      if (counter === promiseAmount) {\n        createBtn.disabled = false;\n        clearInterval(IntervalId);\n      }\n      createPromise(counter, delayedTime);\n    }, step);\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((res, rej) => {\n    if (shouldResolve) {\n      // Fulfill\n      res({ position, delay });\n    } else {\n      // Reject\n      rej({ position, delay });\n    }\n  })\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$ce04d3a99e08e73b$var$counter","$ce04d3a99e08e73b$var$delayedTime","$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createBtn","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","res","rej","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","Number","value","step","promiseAmount","disabled","setTimeout","IntervalId","setInterval","clearInterval"],"version":3,"file":"03-promises.1de99088.js.map"}